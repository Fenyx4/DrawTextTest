on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301
      - name: Install dependencies
        run: |
          dotnet restore ./DrawTextTest.csproj
      - name: Build
        run: dotnet build ./DrawTextTest.csproj --configuration Release --no-restore
      - name: Publish
        run: |
          dotnet publish ./DrawTextTest.csproj -c Release -f netcoreapp3.1 -r win-x86 -p:PublishTrimmed=true --self-contained true -p:PublishSingleFile=true -o output
          zip --junk-paths DrawTextTest-win-x86 output/DrawTextTest.exe
          dotnet publish ./DrawTextTest.csproj -c Release -f netcoreapp3.1 -r win-x64 -p:PublishTrimmed=true --self-contained true -p:PublishSingleFile=true -o output-win-x64
          zip --junk-paths DrawTextTest-win-x64 output-win-x64/DrawTextTest.exe
          dotnet publish ./DrawTextTest.csproj -c Release -f netcoreapp3.1 -r osx-x64 -p:PublishTrimmed=true --self-contained true -p:PublishSingleFile=true -o output-osx-x64
          zip --junk-paths DrawTextTest-osx-x64 output-osx-x64/DrawTextTest
          dotnet publish ./DrawTextTest.csproj -c Release -f netcoreapp3.1 -r linux-x64 -p:PublishTrimmed=true --self-contained true -p:PublishSingleFile=true -o output-linux-x64
          tar -czf DrawTextTest-linux-x64.tar.gz output-linux-x64/DrawTextTest
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset-win-x86 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./DrawTextTest-win-x86.zip
          asset_name: DrawTextTest-win-x86.zip
          asset_content_type: application/zip


      - name: Upload Release Asset
        id: upload-release-asset-win-x64 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./DrawTextTest-win-x64.zip
          asset_name: DrawTextTest-win-x64.zip
          asset_content_type: application/zip


      - name: Upload Release Asset
        id: upload-release-asset-osx-x64 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./DrawTextTest-osx-x64.zip
          asset_name: DrawTextTest-osx-x64.zip
          asset_content_type: application/zip


      - name: Upload Release Asset
        id: upload-release-asset-linux-x64 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./DrawTextTest-linux-x64.tar.gz
          asset_name: DrawTextTest-linux-x64.tar.gz
          asset_content_type: application/tar.gz
